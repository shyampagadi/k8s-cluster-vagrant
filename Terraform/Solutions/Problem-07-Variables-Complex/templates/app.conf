# Application Configuration File
# Generated using HCL templatefile function for Complex Variables Demo

[application]
name = "ComplexVariablesApp"
environment = "${environment}"
version = 1.0.0
debug = false

[server]
host = 0.0.0.0
port = 80
workers = 4
timeout = 30

[database]
host = "mydb.example.com"
port = 3306
name = "${database_config.db_name}"
username = "${database_config.username}"
# Password will be set by Terraform
ssl = true
pool_size = 10

[monitoring]
enabled = ${enable_monitoring}
retention_days = 30
alert_threshold = 80.0
endpoint = /health

[logging]
level = info
file = /var/log/complex-variables-app/app.log
max_size = 100MB
max_files = 5

[cache]
enabled = true
type = redis
host = localhost
port = 6379
ttl = 3600

[security]
cors_enabled = true
allowed_origins = ["https://complex-variables-app.example.com"]
rate_limit = 100
rate_window = 60

[features]
feature_a = true
feature_b = false
feature_c = ${environment == "production" ? "true" : "false"}

[instance]
count = 3
type = web
region = us-west-2
availability_zone = auto

[complex_variables]
stage = active
state_management = terraform
dependencies = ["vpc", "subnet", "security_group"]
lifecycle_rules = ["create_before_destroy", "prevent_destroy", "ignore_changes"]

# Server Configurations from Map Variable
%{ for server_name, config in server_configs ~}
[server.${server_name}]
instance_type = ${config.instance_type}
disk_size = ${config.disk_size}
monitoring = ${config.monitoring}
environment = ${config.environment}
%{ endfor ~}

# Database Configuration from Object Variable
[database.config]
engine = ${database_config.engine}
version = ${database_config.version}
instance_class = ${database_config.instance_class}
allocated_storage = ${database_config.allocated_storage}
backup_retention_period = ${database_config.backup_retention_period}
multi_az = ${database_config.multi_az}
db_name = ${database_config.db_name}
username = ${database_config.username}

# Environment-specific settings
%{ if environment == "production" }
[production]
ssl_cert = /etc/ssl/certs/complex-variables-app.crt
ssl_key = /etc/ssl/private/complex-variables-app.key
backup_enabled = true
backup_schedule = "0 2 * * *"
prevent_destroy = true
monitoring_enabled = true
encryption_enabled = true
%{ endif }

%{ if environment == "development" }
[development]
debug = true
hot_reload = true
mock_external_apis = true
prevent_destroy = false
monitoring_enabled = false
encryption_enabled = false
%{ endif }

%{ if environment == "staging" }
[staging]
ssl_cert = /etc/ssl/certs/complex-variables-app-staging.crt
ssl_key = /etc/ssl/private/complex-variables-app-staging.key
backup_enabled = true
backup_schedule = "0 3 * * *"
prevent_destroy = false
monitoring_enabled = true
encryption_enabled = true
%{ endif }
