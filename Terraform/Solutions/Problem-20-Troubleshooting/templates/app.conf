# Troubleshooting - Application Configuration

[application]
name = "${app_name}"
environment = "${environment}"
project = "${project_name}"
instance_id = "${instance_id}"
troubleshooting_enabled = "${troubleshooting_enabled}"

[infrastructure]
instance_type = "t3.micro"
region = "us-west-2"
created_at = "2024-01-01T00:00:00Z"

[troubleshooting]
enabled = "${troubleshooting_enabled}"
debugging = "enabled"
validation = "enabled"
monitoring = "enabled"
logging = "enabled"
health_checks = "enabled"

[monitoring]
enabled = true
log_level = "${environment == "prod" ? "error" : "debug"}"
retention_days = 7

[troubleshooting_features]
debugging_enabled = true
validation_enabled = true
monitoring_enabled = true
logging_enabled = true
health_checks_enabled = true

[database]
host = "localhost"
port = 3306
name = "webapp"
username = "admin"
# Password should be set via environment variable

[logging]
level = "${environment == "prod" ? "error" : "debug"}"
format = "json"
output = "stdout"
file = "/var/log/app.log"

[features]
debug_mode = "${environment == "dev" ? "true" : "false"}"
profiling = "${environment == "dev" ? "true" : "false"}"
metrics = true
tracing = "${environment == "prod" ? "true" : "false"}"

[troubleshooting_tools]
htop = "installed"
iotop = "installed"
netstat = "installed"
tcpdump = "installed"
strace = "installed"

[deployment]
strategy = "rolling"
health_check_path = "/health"
readiness_check_path = "/ready"
liveness_check_path = "/live"

[observability]
metrics_endpoint = "/metrics"
health_endpoint = "/health"
status_endpoint = "/status"
info_endpoint = "/info"

[troubleshooting_strategies]
systematic_debugging = "enabled"
error_analysis = "enabled"
state_troubleshooting = "enabled"
provider_debugging = "enabled"
infrastructure_validation = "enabled"
performance_troubleshooting = "enabled"

[debugging_approaches]
identify_problem = "enabled"
gather_information = "enabled"
analyze_logs = "enabled"
validate_configuration = "enabled"
test_hypotheses = "enabled"

[error_analysis]
configuration_errors = "monitored"
provider_errors = "monitored"
state_errors = "monitored"
runtime_errors = "monitored"

[troubleshooting_tools]
terraform_commands = "available"
aws_cli = "available"
system_tools = "installed"
monitoring_tools = "enabled"
